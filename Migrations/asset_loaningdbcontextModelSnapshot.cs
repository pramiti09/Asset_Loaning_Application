// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using asset_loaning_api.data;

#nullable disable

namespace asset_loaning_api.Migrations
{
    [DbContext(typeof(asset_loaningdbcontext))]
    partial class asset_loaningdbcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("asset_loaning_api.models.domains.AssetDetails", b =>
                {
                    b.Property<Guid>("assetid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("occupied")
                        .HasColumnType("int");

                    b.Property<string>("serialnumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("assetid");

                    b.ToTable("AssetDetails");
                });

            modelBuilder.Entity("asset_loaning_api.models.domains.UserDetails", b =>
                {
                    b.Property<Guid>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("asset_loaning_api.models.domains.transactions", b =>
                {
                    b.Property<Guid>("transactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("assetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("returning_supervisorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("studentID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("supervisorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("transaction_date")
                        .HasColumnType("date");

                    b.Property<string>("transaction_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("transactionID");

                    b.HasIndex("assetId");

                    b.HasIndex("returning_supervisorId");

                    b.HasIndex("studentID");

                    b.HasIndex("supervisorId");

                    b.ToTable("transactions");
                });

            modelBuilder.Entity("asset_loaning_api.models.domains.transactions", b =>
                {
                    b.HasOne("asset_loaning_api.models.domains.AssetDetails", "asset")
                        .WithMany()
                        .HasForeignKey("assetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asset_loaning_api.models.domains.UserDetails", "returning_supervisor")
                        .WithMany()
                        .HasForeignKey("returning_supervisorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("asset_loaning_api.models.domains.UserDetails", "student")
                        .WithMany()
                        .HasForeignKey("studentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("asset_loaning_api.models.domains.UserDetails", "supervisor")
                        .WithMany()
                        .HasForeignKey("supervisorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("asset");

                    b.Navigation("returning_supervisor");

                    b.Navigation("student");

                    b.Navigation("supervisor");
                });
#pragma warning restore 612, 618
        }
    }
}
